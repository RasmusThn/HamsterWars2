@using Entities.Models
@using HamsterWars2Blazor.Service

    
@*<div class="text-center">
    <div class="card card-goodies " style="background-color:darkcyan">
        <div class="card-header">Matches</div>
@if (matches is not null)
{
        @foreach (var match in matches)
        {
            <div class="card-body">
                <a href="/match/@match.Id">
                <strong>Match Id:</strong> @match.Id
                </a>
                <strong>Winner:</strong> @hamsters.Where(x=>x.Id == match.WinnerId).First().Name
                <strong>Looser:</strong> @hamsters.Where(x=>x.Id == match.LoserId).First().Name
                <strong>Time:</strong> @match.TimeStamp
            </div>
        }
}
    </div>
</div>*@

<ShowMatchesComponent Matches="matches"></ShowMatchesComponent>


@code {
    [Parameter]
    public Hamster Hamster { get; set; }
    private List<Hamster> hamsters { get; set; }
    private List<Match> matches;

    [Inject]
    public IMatchHttpService matchService { get; set; }
    [Inject]
    public IHamsterHttpService hamsterService { get; set; }

    protected override async void OnInitialized() //TODO: Kolla om det går utan state has changed nu när det är async istället
    {
        matches = await matchService.GetAllMatchesByHamsterId(Hamster.Id);
        hamsters = await hamsterService.GetAllHamsters();
        StateHasChanged();
    }
   
}
